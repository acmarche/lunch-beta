<?php

namespace AcMarche\LunchBundle\Repository;

use AcMarche\LunchBundle\Entity\Commerce;
use AcMarche\LunchBundle\Entity\Supplement;
use AcMarche\SecurityBundle\Entity\User;

/**
 * SupplementsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SupplementRepository extends \Doctrine\ORM\EntityRepository
{
    public function search($args)
    {
        $qb = $this->createQueryBuilder('supplement');
        $qb->leftJoin('supplement.produits', 'produits', 'WITH');
        $qb->leftJoin('supplement.commerce', 'commerce', 'WITH');
        $qb->addSelect('produits', 'commerce');

        $motclef = isset($args['motclef']) ? $args['motclef'] : null;
        $commerce = isset($args['commerce']) ? $args['commerce'] : null;

        if ($motclef) {
            $qb->andWhere('supplement.nom LIKE :clef')
                ->setParameter('clef', '%'.$motclef.'%');
        }

        if ($commerce) {
            $qb->andWhere('commerce = :commerce')
                ->setParameter('commerce', $commerce);
        }

        $qb->addOrderBy('supplement.nom');

        $query = $qb->getQuery();

        $results = $query->getResult();

        return $results;
    }

    public function getCommerceForForm(Commerce $commerce)
    {
        $qb = $this->createQueryBuilder('supplement');

        $qb->andWhere('supplement.commerce = :id')
            ->setParameter('id', $commerce);

        $qb->addOrderBy('supplement.nom', 'ASC');

        return $qb;
    }

    /**
     * @param User $user
     * @return Supplement[]
     */
    public function getOwnedByUser(User $user)
    {
        $em = $this->getEntityManager();
        $commerces = $em->getRepository(Commerce::class)->getCommercesOwnedByUser(
            $user
        );

        if (!$commerces) {
            return [];
        }

        return $this->search(['commerce' => $commerces]);
    }
}
